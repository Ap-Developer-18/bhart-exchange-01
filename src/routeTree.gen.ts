/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TransactionIndexRouteImport } from './routes/transaction/index'
import { Route as SignUpIndexRouteImport } from './routes/sign-up/index'
import { Route as SelectVendorsIndexRouteImport } from './routes/select-vendors/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as HomepageIndexRouteImport } from './routes/homepage/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TransactionIndexRoute = TransactionIndexRouteImport.update({
  id: '/transaction/',
  path: '/transaction/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpIndexRoute = SignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => rootRouteImport,
} as any)
const SelectVendorsIndexRoute = SelectVendorsIndexRouteImport.update({
  id: '/select-vendors/',
  path: '/select-vendors/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomepageIndexRoute = HomepageIndexRouteImport.update({
  id: '/homepage/',
  path: '/homepage/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/homepage': typeof HomepageIndexRoute
  '/login': typeof LoginIndexRoute
  '/select-vendors': typeof SelectVendorsIndexRoute
  '/sign-up': typeof SignUpIndexRoute
  '/transaction': typeof TransactionIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardIndexRoute
  '/homepage': typeof HomepageIndexRoute
  '/login': typeof LoginIndexRoute
  '/select-vendors': typeof SelectVendorsIndexRoute
  '/sign-up': typeof SignUpIndexRoute
  '/transaction': typeof TransactionIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/homepage/': typeof HomepageIndexRoute
  '/login/': typeof LoginIndexRoute
  '/select-vendors/': typeof SelectVendorsIndexRoute
  '/sign-up/': typeof SignUpIndexRoute
  '/transaction/': typeof TransactionIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/homepage'
    | '/login'
    | '/select-vendors'
    | '/sign-up'
    | '/transaction'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/homepage'
    | '/login'
    | '/select-vendors'
    | '/sign-up'
    | '/transaction'
  id:
    | '__root__'
    | '/'
    | '/dashboard/'
    | '/homepage/'
    | '/login/'
    | '/select-vendors/'
    | '/sign-up/'
    | '/transaction/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  HomepageIndexRoute: typeof HomepageIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  SelectVendorsIndexRoute: typeof SelectVendorsIndexRoute
  SignUpIndexRoute: typeof SignUpIndexRoute
  TransactionIndexRoute: typeof TransactionIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/transaction/': {
      id: '/transaction/'
      path: '/transaction'
      fullPath: '/transaction'
      preLoaderRoute: typeof TransactionIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up/': {
      id: '/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/select-vendors/': {
      id: '/select-vendors/'
      path: '/select-vendors'
      fullPath: '/select-vendors'
      preLoaderRoute: typeof SelectVendorsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/homepage/': {
      id: '/homepage/'
      path: '/homepage'
      fullPath: '/homepage'
      preLoaderRoute: typeof HomepageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  HomepageIndexRoute: HomepageIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  SelectVendorsIndexRoute: SelectVendorsIndexRoute,
  SignUpIndexRoute: SignUpIndexRoute,
  TransactionIndexRoute: TransactionIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
